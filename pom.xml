<project xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>
    <parent>
      <groupId>com.fasterxml</groupId>
      <artifactId>oss-parent</artifactId>
     <version>55</version>
    </parent>

    <artifactId>stargate-mb</artifactId>
    <name>Stargate Micro Benchmarks</name>
    <packaging>jar</packaging>

    <description>JMH-based micro-benchmark used for validating some Stargate optimizations
</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <version.jmh>1.37</version.jmh>
    </properties>

    <dependencies>
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-core</artifactId>
        <version>${version.jmh}</version>
      </dependency>

      <!-- As per [http://stackoverflow.com/questions/23891586/jmh-not-working-in-eclipse-as-maven-project-no-benchmarks-to-run]
           we need another dep
        -->
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-generator-annprocess</artifactId>
        <version>${version.jmh}</version>
        <!-- the processor artifact is required only during compilation and 
           does not need to be transitive, hence provided scope
          -->
        <scope>provided</scope> 
      </dependency>

      <!-- If we rely on other packages, add them here -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>27.0-jre</version>
      </dependency>

    </dependencies>

    <build>
	<plugins>
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-compiler-plugin</artifactId>
	    <version>3.8.1</version>
            <configuration>
              <source>1.8</source>
              <target>1.8</target>
              <showDeprecation>true</showDeprecation>
              <showWarnings>true</showWarnings>
              <optimize>true</optimize>
            </configuration>
	  </plugin>
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-shade-plugin</artifactId>
	    <executions>
	      <execution>
		<phase>package</phase>
		<goals>
		  <goal>shade</goal>
		</goals>
		<configuration>
		  <finalName>microbenchmarks</finalName>
		  <transformers>
		    <transformer
		       implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
		      <mainClass>org.openjdk.jmh.Main</mainClass>
		    </transformer>
		  </transformers>
		</configuration>
	      </execution>
	    </executions>
	  </plugin>
	</plugins>
      </build>
</project>
